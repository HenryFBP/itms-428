RaquelTeachingTool/TclTkInterface.cpp:182:5:  ,[4], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. ,
RaquelTeachingTool/TclTkInterface.cpp:280:3:  ,[4], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. ,
RaquelTeachingTool/TclTkInterface.cpp:310:4:  ,[4], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. ,
RaquelTeachingTool/TclTkInterface.cpp:319:3:  ,[4], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. ,
RaquelTeachingTool/lib/xlib/xcolors.c:893:6:  ,[4], ,(buffer), sscanf: The scanf() family's %s operation, without a limit specification, permits buffer overflows (CWE-120, CWE-20).  Specify a limit to %s, or use a different input function. If the scanf format is influenceable by an attacker, it's exploitable.,
RaquelTeachingTool/tcltk/commands.cpp:70:3:  ,[4], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. ,
RaquelTeachingTool/tcltk/commands.cpp:76:3:  ,[4], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. ,
RaquelTeachingTool/tcltk/commands.cpp:82:3:  ,[4], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. ,
RaquelTeachingTool/tcltk/commands.cpp:100:3:  ,[4], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). ,
RaquelTeachingTool/tcltk/commands.cpp:104:3:  ,[4], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). ,
RaquelTeachingTool/tcltk/commands.cpp:108:5:  ,[4], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). ,
RaquelTeachingTool/tcltk/commands.cpp:138:3:  ,[4], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). ,
RaquelTeachingTool/tcltk/commands.cpp:139:3:  ,[4], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). ,
RaquelTeachingTool/Error.cpp:69:6:  ,[2], ,(misc), open: Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  ,
RaquelTeachingTool/Error.cpp:212:2:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/TclTkInterface.cpp:167:4:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/TclTkInterface.cpp:169:4:  ,[2], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.,
RaquelTeachingTool/TclTkInterface.cpp:179:5:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/TclTkInterface.cpp:208:2:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/TclTkInterface.cpp:341:9:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/TclTkInterface.cpp:342:9:  ,[2], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.,
RaquelTeachingTool/lib/tcl.h:879:5:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/tcl.h:994:5:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/tcl.h:1171:2:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/tk.h:1146:2:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/x11/Xlib.h:418:2:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/x11/Xlib.h:549:9:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/x11/Xlib.h:639:2:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/x11/Xlib.h:886:3:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/xbytes.h:22:17:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/xcolors.c:884:2:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/xcolors.c:892:2:  ,[2], ,(buffer), sprintf: Does not check for buffer overflows (CWE-120).  Use sprintf_s, snprintf, or vsnprintf. Risk is low because the source has a constant maximum length.,
RaquelTeachingTool/tcltk/commands.cpp:102:34:  ,[2], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:103:34:  ,[2], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:109:5:  ,[2], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:137:3:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/tcltk/commands.cpp:142:16:  ,[2], ,(misc), fopen: Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  ,
RaquelTeachingTool/tcltk/commands.cpp:144:5:  ,[2], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:150:3:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/tcltk/commands.cpp:158:15:  ,[2], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:226:22:  ,[2], ,(misc), open: Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  ,
RaquelTeachingTool/tcltk/commands.cpp:229:5:  ,[2], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:230:5:  ,[2], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:238:25:  ,[2], ,(misc), open: Check when opening files - can an attacker redirect it (via symlinks), force the opening of special file type (e.g., device files), move things around to create a race condition, control its ancestors, or change its contents? (CWE-362).  ,
RaquelTeachingTool/tcltk/commands.cpp:241:7:  ,[2], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:242:7:  ,[2], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:266:5:  ,[2], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:298:5:  ,[2], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/commands.cpp:317:5:  ,[2], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant string.,
RaquelTeachingTool/tcltk/inputStackErrors.h:34:3:  ,[2], ,(buffer), char: Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119:CWE-120).  Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length. ,
RaquelTeachingTool/lib/xlib/xcolors.c:887:17:  ,[1], ,(buffer), strlen: Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  ,
RaquelTeachingTool/tcltk/commands.cpp:86:3:  ,[1], ,(buffer), strncpy: Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers (CWE-120).  ,
RaquelTeachingTool/tcltk/commands.cpp:105:7:  ,[1], ,(buffer), strlen: Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  ,
RaquelTeachingTool/tcltk/commands.cpp:107:5:  ,[1], ,(buffer), strcat: Does not check for buffer overflows when concatenating to destination (CWE-120).  Consider using strcat_s, strncat, or strlcat (warning, strncat is easily misused). Risk is low because the source is a constant character.,
RaquelTeachingTool/tcltk/commands.cpp:201:3:  ,[1], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant character.,
RaquelTeachingTool/tcltk/commands.cpp:210:5:  ,[1], ,(buffer), strncat: Easily used incorrectly (e.g., incorrectly computing the correct maximum size to add) (CWE-120).  Consider strcat_s, strlcat, or automatically resizing strings. ,
RaquelTeachingTool/tcltk/commands.cpp:210:43:  ,[1], ,(buffer), strlen: Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  ,
RaquelTeachingTool/tcltk/commands.cpp:235:30:  ,[1], ,(buffer), strlen: Does not handle strings that are not \0-terminated; if given one it may perform an over-read (it could cause a crash if unprotected) (CWE-126).  ,
RaquelTeachingTool/tcltk/commands.cpp:248:15:  ,[1], ,(buffer), read: Check buffer boundaries if used in a loop including recursive loops (CWE-120, CWE-20).  ,
RaquelTeachingTool/tcltk/commands.cpp:274:7:  ,[1], ,(buffer), strcpy: Does not check for buffer overflows when copying to destination (CWE-120).  Consider using strcpy_s, strncpy, or strlcpy (warning, strncpy is easily misused). Risk is low because the source is a constant character.,
RaquelTeachingTool/tcltk/commands.cpp:280:7:  ,[1], ,(buffer), strncpy: Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers (CWE-120).  ,
RaquelTeachingTool/tcltk/commands.cpp:303:5:  ,[1], ,(buffer), strncpy: Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers (CWE-120).  ,
RaquelTeachingTool/tcltk/commands.cpp:322:5:  ,[1], ,(buffer), strncpy: Easily used incorrectly; doesn't always \0-terminate or check for invalid pointers (CWE-120).  ,

ANALYSIS SUMMARY:

Hits = 63
Lines analyzed = 21206 in approximately 0.66 seconds (32265 lines/second)
Physical Source Lines of Code (SLOC) = 15163
Hits@level = [0]   0 [1]  13 [2]  37 [3]   0 [4]  13 [5]   0
Hits@level+ = [0+]  63 [1+]  63 [2+]  50 [3+]  13 [4+]  13 [5+]   0
Hits/KSLOC@level+ = [0+] 4.15485 [1+] 4.15485 [2+] 3.2975 [3+] 0.85735 [4+] 0.85735 [5+]   0
Dot directories skipped = 1 (--followdotdir overrides)
Minimum risk level = 1
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
See 'Secure Programming for Linux and Unix HOWTO'
(http://www.dwheeler.com/secure-programs) for more information.
